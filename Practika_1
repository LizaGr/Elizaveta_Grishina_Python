import numpy as np
import matplotlib.pyplot as plt

#построение графика у=х
x = np.linspace(0, 10, 50) # независимая х
y = x
plt.title("Линейная зависимость y = x") #название
plt.xlabel("x") #обозначение оси абсцисс
plt.ylabel("y")
plt.grid() #включение отображения сетки
plt.plot(x, y) #вывод графика

#построение графика у=х пунктиром
plt.title("Линейная зависимость y = x")
plt.xlabel("x")
plt.ylabel("y") 
plt.grid()
plt.plot(x, y, "r--")

#построение двух графиков у=х и у=х*х на одном графике
x = np.linspace(0, 10, 50)
y1 = x
y2 = [i**2 for i in x] # квадратичная зависимость
plt.title("Зависимости: y1 = x, y2 = x^2")
plt.xlabel("x")
plt.ylabel("y1, y2")
plt.grid() 
plt.plot(x, y1, x, y2)

#построение двух графиков 
x = np.linspace(0, 10, 50)
y1 = x
y2 = [i**2 for i in x]
plt.figure(figsize=(9, 9))
plt.subplot(2, 1, 1)
plt.plot(x, y1)
plt.title("Зависимости: y1 = x, y2 = x^2")
plt.ylabel("y1", fontsize=14)
plt.grid(True)
plt.subplot(2, 1, 2)
plt.plot(x, y2) 
plt.xlabel("x", fontsize=14)
plt.ylabel("y2", fontsize=14)
plt.grid(True) 

#построение диаграмы количества фруктов
fruits = ["apple", "peach", "orange", "banana", "melon"]
counts = [34, 25, 43, 31, 17]
plt.bar(fruits, counts)
plt.title("Fruits!")
plt.xlabel("Fruit")
plt.ylabel("Count")

import matplotlib.pyplot as plt
from matplotlib.ticker import (MultipleLocator, FormatStrFormatter,
AutoMinorLocator)
import numpy as np

x = np.linspace(0, 10, 10)
y1 = 4*x
y2 = [i**2 for i in x]
fig, ax = plt.subplots(figsize=(8, 6))
ax.set_title("Графики зависимостей: y1=4*x, y2=x^2", fontsize=16) #заголовок
ax.set_xlabel("x", fontsize=14) #подпись на оси х
ax.set_ylabel("y1, y2", fontsize=14) #подписи на оси у
ax.grid(which="major", linewidth=1.2) #основная сетка
ax.grid(which="minor", linestyle="--", color="gray", linewidth=0.5) #допонителная сетка
ax.scatter(x, y1, c="red", label="y1 = 4*x") #точечный график
ax.plot(x, y2, label="y2 = x^2") #линейный график
ax.legend() #легенда
ax.xaxis.set_minor_locator(AutoMinorLocator())
ax.yaxis.set_minor_locator(AutoMinorLocator())
ax.tick_params(which='major', length=10, width=2) #основные разметки
ax.tick_params(which='minor', length=5, width=1) #дополнительные разметки
plt.show()

plt.plot([1, 7, 3, 5, 11, 1]) #Если в качестве параметра функции plot() передать список, то значения из этого списка
#будут отложены по оси ординат (ось y), а по оси абсцисс (ось x) будут отложены
#индексы элементов массива:



plt.plot([1, 5, 10, 15, 20], [1, 7, 3, 5, 11])#Для того, чтобы задать значения по осям x и y необходимо в plot() передать два списка


x = [1, 5, 10, 15, 20]
y = [1, 7, 3, 5, 11]
plt.plot(x, y, label='steel price')
plt.title('Chart price', fontsize=15)
plt.xlabel('Day', fontsize=12, color='blue')
plt.ylabel('Price', fontsize=12, color='blue')
plt.legend()
plt.grid(True)
plt.text(15, 4, 'grow up!') #надпись по координатам


x = [1, 5, 10, 15, 20]
y = [1, 7, 3, 5, 11]
plt.plot(x, y, '--')

x = [1, 5, 10, 15, 20]
y1 = [1, 7, 3, 5, 11]
y2 = [i*1.2 + 1 for i in y1]
y3 = [i*1.2 + 1 for i in y2]
y4 = [i*1.2 + 1 for i in y3]
plt.plot(x, y1, '-', x, y2, '--', x, y3, '-.', x, y4, ':')

x = [1, 5, 10, 15, 20]
y = [1, 7, 3, 5, 11]
plt.plot(x, y, '--r')

plt.plot(x, y, 'ro')
plt.plot(x, y, 'bx')

import matplotlib.pyplot as plt
from matplotlib.ticker import (MultipleLocator, FormatStrFormatter,
AutoMinorLocator)
import numpy as np

# Исходный набор данных
x = [1, 5, 10, 15, 20]
y1 = [1, 7, 3, 5, 11]
y2 = [i*1.2 + 1 for i in y1]
y3 = [i*1.2 + 1 for i in y2]
y4 = [i*1.2 + 1 for i in y3]
# Настройка размеров подложки
plt.figure(figsize=(12, 7))
# Вывод графиков
plt.subplot(2, 2, 1)
plt.plot(x, y1, '-')
plt.subplot(2, 2, 2)
plt.plot(x, y2, '--')
plt.subplot(2, 2, 3)
plt.plot(x, y3, '-.')
plt.subplot(2, 2, 4)
plt.plot(x, y4, ':')

fig, axs = plt.subplots(2, 2, figsize=(12, 7))
axs[0, 0].plot(x, y1, '-')
axs[0, 1].plot(x, y2, '--')
axs[1, 0].plot(x, y3, '-.')
axs[1, 1].plot(x, y4, ':')
